public class Solution {


    public static void main(String[] args) {
//        Solution sl = new Solution();
//        Scanner sc = new Scanner(System.in);
//        System.out.print("Enter no of test cases: ");
//        int tc = sc.nextInt();
//
//
//        while (tc-- != 0) {
//            int num1 = sc.nextInt();
//            int num2 = sc.nextInt();
//            int x = sl.minimizeXor(num1, num2);
//            System.out.println("x = " + x);
//        }


        int i = BitUtil.rightShiftK(13, 4);
        System.out.println("i = " + i);
    }


    public int minimizeXor(int num1, int num2) {
        // num 1 -> min xor op
        // num 2 -> same set bits
        int x = num1;

        int target = BitUtil.countSetBits(num2);
        int curr = BitUtil.countSetBits(num1);


        for (int ind = 0; curr < target; ind++) {
            if (!BitUtil.isSet(x, ind)) {
                x = BitUtil.setBit(x, ind);
                curr++;
            }
        }

        for (int ind = 0; curr > target; ind++) {
            if (BitUtil.isSet(x, ind)) {
                x = BitUtil.unsetBit(x, ind);
                curr--;
            }
        }

        System.out.println(BitUtil.to32BitBinaryString(x));

        return x;
    }
}
